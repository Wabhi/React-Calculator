{"version":3,"sources":["Components/Buttons/Button.js","Components/Inputs/Input.js","Components/Clear/Clear.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","val","className","children","isNaN","onClick","handleClick","Input","input","Clear","handleClear","App","addToInput","setState","state","handleEqual","math","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAGe,SAASA,EAAOC,GAC3B,IAAoBC,EAIpB,OACI,qBAAKC,UAAS,0BALED,EAK6BD,EAAMG,SAJ3CC,MAAMH,IAAgB,MAARA,GAAuB,MAARA,EAIiC,WAAP,OAC3DI,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,WAD3C,SAEKH,EAAMG,W,MCTJ,SAASI,EAAMP,GAC1B,OACI,qBAAKE,UAAU,QAAf,SAAwBF,EAAMQ,Q,MCFvB,SAASC,EAAMT,GAC1B,OACI,qBAAKE,UAAU,YAAYG,QAASL,EAAMU,YAA1C,SACKV,EAAMG,W,YC8DJQ,E,kDA5Db,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAORY,WAAa,SAAAX,GACX,EAAKY,SAAS,CAAEL,MAAO,EAAKM,MAAMN,MAAQP,KATzB,EAYnBc,YAAc,WACZ,EAAKF,SAAS,CAACL,MAAMQ,IAAc,EAAKF,MAAMN,UAV9C,EAAKM,MAAQ,CACXN,MAAO,IAJQ,E,0CAiBnB,WAAU,IAAD,OACP,OACE,sBAAKN,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,8BACF,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAOM,MAAOS,KAAKH,MAAMN,QACzB,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,CAAQI,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CAAQI,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CAAQI,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CAAQI,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAa,kBAAI,EAAKS,eAA9B,eACA,cAAC,EAAD,CAAQT,YAAaW,KAAKL,WAA1B,kBAEF,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,CAAOQ,YAAa,kBAAM,EAAKG,SAAS,CAAEL,MAAO,MAAjD,iC,GAlDMU,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d6f3fdf.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Button.css'\r\n\r\nexport default function Button(props) {\r\n    const isOperator = (val) => {\r\n        return !isNaN(val) || val === \".\" || val === \"=\";\r\n    };\r\n\r\n    return (\r\n        <div className={`button-wrapper ${isOperator(props.children) ? null : \"operator\"}`}\r\n            onClick={() => props.handleClick(props.children)}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Input.css'\r\nexport default function Input(props) {\r\n    return (\r\n        <div className=\"input\">{props.input}</div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Clear.css'\r\nexport default function Clear(props) {\r\n    return (\r\n        <div className=\"clear-btn\" onClick={props.handleClear}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Button from \"./Components/Buttons/Button\";\nimport  Input  from \"./Components/Inputs/Input\";\nimport Clear from \"./Components/Clear/Clear\";\nimport *as  math from \"mathjs\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\"\n    };\n  }\n\n  addToInput = val => {\n    this.setState({ input: this.state.input + val });\n    //console.log('state change')\n  };\n  handleEqual = () => {\n    this.setState({input:math.evaluate(this.state.input)})\n    //console.log('equal')\n\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"react\">REACT CALCULATOR</h1>\n      <div className=\"app\">\n        <div className=\"calc-wrapper\">\n          <Input input={this.state.input} />\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>X</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.addToInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>.</Button>\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={()=>this.handleEqual()}>=</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n          </div>\n          <div className=\"row\">\n            <Clear handleClear={() => this.setState({ input: \"\" })}>\n              CLEAR\n            </Clear>\n          </div>\n        </div>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}